{"version":3,"sources":["components/GoodsList.jsx","App.js","index.js"],"names":["GoodsList","goodsList","isReverse","isSort","sortBy","copyList","sort","prevGood","nextGood","localeCompare","length","reverse","map","good","key","goodsFromServer","App","state","visibleGoods","setState","sortMethod","reset","className","this","type","onClick","React","PureComponent","ReactDOM","render","document","getElementById"],"mappings":"oOAEaA,EAAY,SAAC,GAA4C,IAA3CC,EAA0C,EAA1CA,UAAWC,EAA+B,EAA/BA,UAAWC,EAAoB,EAApBA,OAAQC,EAAY,EAAZA,OACjDC,EAAQ,YAAOJ,GAqBrB,OAnBIE,GACFE,EAASC,MAAK,SAACC,EAAUC,GACvB,OAAOJ,GACL,IAAK,iBACH,OACEG,EAASE,cAAcD,GAE3B,IAAK,SACH,OACED,EAASG,OAASF,EAASE,WAMjCR,GACFG,EAASM,UAIT,4BACGN,EAASO,KAAI,SAAAC,GAAI,OAChB,wBAAIC,IAAKD,GACNA,QCxBLE,G,MAAkB,CACtB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,WA2FaC,E,4MAvFbC,MAAQ,CACNhB,UAAWc,EACXG,cAAc,EACdhB,WAAW,EACXC,QAAQ,EACRC,OAAQ,kB,EAGVF,UAAY,WACV,EAAKiB,UAAS,SAAAF,GAAK,MAAK,CACtBf,WAAYe,EAAMf,e,EAItBC,OAAS,SAACiB,GACR,EAAKD,UAAS,SAAAF,GAAK,MAAK,CACtBd,QAASc,EAAMd,OACfC,OAAQgB,O,EAIZC,MAAQ,WACN,EAAKF,UAAS,iBAAO,CACnBjB,WAAW,EACXC,QAAQ,O,4CAIZ,WAAU,IAAD,OACP,OACE,oCACE,yBAAKmB,UAAU,OACb,qCACCP,EAAgBL,QAGjBa,KAAKN,MAAMC,aAaT,oCACE,4BACEM,KAAK,SACLC,QAASF,KAAKrB,WAFhB,WAMA,4BACEsB,KAAK,SACLC,QAAS,kBACP,EAAKtB,OAAO,oBAHhB,uBAQA,4BACEqB,KAAK,SACLC,QAASF,KAAKF,OAFhB,SAMA,4BACEG,KAAK,SACLC,QAAS,kBACP,EAAKtB,OAAO,YAHhB,kBAQA,kBAAC,EAAcoB,KAAKN,QAxCtB,4BACEO,KAAK,SACLC,QAAS,kBACP,EAAKN,SAAS,CACZD,cAAc,MAJpB,c,GAvCMQ,IAAMC,eCbxBC,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.49a31ff4.chunk.js","sourcesContent":["import React from 'react';\n\nexport const GoodsList = ({goodsList, isReverse, isSort, sortBy}) => {\n  const copyList = [...goodsList];\n\n  if (isSort) {\n    copyList.sort((prevGood, nextGood) => {\n      switch(sortBy) {\n        case 'alphabetically' :\n          return (\n            prevGood.localeCompare(nextGood)\n          );\n        case 'length' :\n          return (\n            prevGood.length - nextGood.length\n          );\n      }\n    });\n  }\n\n  if (isReverse) {\n    copyList.reverse();\n  }\n\n  return (\n    <ul>\n      {copyList.map(good => (\n        <li key={good}>\n          {good}\n        </li>\n      ))}\n    </ul>\n  );\n};\n","import React from 'react';\nimport { GoodsList } from './components/GoodsList';\nimport './App.css';\n\nconst goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nclass App extends React.PureComponent {\n  state = {\n    goodsList: goodsFromServer,\n    visibleGoods: false,\n    isReverse: false,\n    isSort: false,\n    sortBy: 'alphabetically',\n  };\n\n  isReverse = () => {\n    this.setState(state => ({\n      isReverse: !state.isReverse,\n    }));\n  }\n\n  isSort = (sortMethod) => {\n    this.setState(state => ({\n      isSort: !state.isSort,\n      sortBy: sortMethod,\n    }));\n  }\n\n  reset = () => {\n    this.setState(() => ({\n      isReverse: false,\n      isSort: false,\n    }));\n  }\n\n  render() {\n    return (\n      <>\n        <div className=\"App\">\n          <h1>Goods</h1>\n          {goodsFromServer.length}\n        </div>\n\n        {!this.state.visibleGoods\n          ? (\n            <button\n              type=\"button\"\n              onClick={() => (\n                this.setState({\n                  visibleGoods: true,\n                })\n              )}\n            >\n              start\n            </button>\n          ) : (\n            <>\n              <button\n                type=\"button\"\n                onClick={this.isReverse}\n              >\n                Reverse\n              </button>\n              <button\n                type=\"button\"\n                onClick={() => (\n                  this.isSort('alphabetically')\n                )}\n              >\n                Sort alphabetically\n              </button>\n              <button\n                type=\"button\"\n                onClick={this.reset}\n              >\n                Reset\n              </button>\n              <button\n                type=\"button\"\n                onClick={() => (\n                  this.isSort('length')\n                )}\n              >\n                Sort by length\n              </button>\n              <GoodsList {...this.state} />\n            </>\n          )}\n\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}